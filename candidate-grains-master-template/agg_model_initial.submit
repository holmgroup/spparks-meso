START=$(date)
echo ${START}
JOBHANDLE=AGGmodel-${SLURM_ARRAY_JOB_ID}-${SLURM_ARRAY_TASK_ID}
SCRATCH=${SLURM_SUBMIT_DIR}/scratch/${JOBHANDLE}
let RESULTS_ID=(${BATCHNUMBER}*${ARRAYSIZE})+${SLURM_ARRAY_TASK_ID}
RESULTS=${SLURM_SUBMIT_DIR}/spparks_results/run_${RESULTS_ID}
LOCKFILE=${RESULTS}/agg_model.lock


mkdir -p ${SCRATCH}
mkdir -p ${RESULTS}
echo ${JOBHANDLE} >> ${RESULTS}/output_path.txt

cd ${SCRATCH}


. /etc/profile.d/modules.sh
module load python/3.4
module load gcc/4.9.3
module load mpich
module load spparks/2013.11.19
module load ffmpeg

# disallow uninitialized variables
# note: triggers error when loading /etc/profile.d/modules.sh
set -o nounset


# seed_spparks grow_initial.spkin
INIT_FILE=grow_initial.spkin
seed_spparks ${INIT_FILE}
cat ${SLURM_SUBMIT_DIR}/init_template.spkin >> ${INIT_FILE}
spparks -in ${INIT_FILE}
mv log.spparks init_spparks.log

red_frac="0.2"  # default value
for arg in "$@"
do
    case $arg in
        -r=*|--red-frac=*) # fraction of red grains to initialize
            red_frac="${arg#*=}"
            shift # remove --red-frac from processing
            ;;
    esac
done

echo "init_red_frac: ${red_frac}" 

# python ${SLURM_SUBMIT_DIR}/candidate -i initial0.dream3d -o initial.dream3d -s 1.8 -r 0.3
# specify negative size cutoff to pick the largest grain
# --randomize selects a random texture on the interval (0,r)
# -s: size parameter for candidate
# -r: fraction of high mobility grains in initial microstructure
# --randomize: use random fraction of high mobility grains (overrides -r)
meso candidate initial0.dream3d -o initial.dream3d -s -0.5 -r ${red_frac}

for f in ${INIT_FILE} init_spparks.log initial.dream3d
do
    cp ${f} ${RESULTS}
done

cd ${SLURM_SUBMIT_DIR}
rm -r ${SCRATCH}

echo "start: ${START}"
echo "end: $(date)"


