#!/bin/bash
#SBATCH -J AGGcontrol-grow
#SBATCH --ntasks 1
#SBATCH --cpus-per-task 1
#SBATCH --partition=batch
#SBATCH --array 1
#SBATCH --output=control_grow/AGGcontrol-%a-%A.stdout

# for now, limited to 1000 array jobs
# until I figure out how MaxArraySize works
BATCHNUMBER=${1}
ARRAYSIZE=1
echo "batch ${BATCHNUMBER}"

START=$(date)

STDOUT=AGGcontrol-${SLURM_ARRAY_JOB_ID}-${SLURM_ARRAY_TASK_ID}
SCRATCH=/mnt/local/brian/${STDOUT}
let RESULTS_ID=(${BATCHNUMBER}*${ARRAYSIZE})+${SLURM_ARRAY_TASK_ID}
RESULTS=${SLURM_SUBMIT_DIR}/control_results/run_${RESULTS_ID}
LOCKFILE=${RESULTS}/agg_model.lock

if ! [ -f ${RESULTS}/initial.dream3d ]
then
    echo "initial microstructure not constructed; exiting"
    exit 0
fi

if [ -f ${LOCKFILE} ]
then
    echo "results directory locked; exiting"
    exit 0
fi

mkdir -p ${SCRATCH}
mkdir -p ${RESULTS}
echo ${JOBHANDLE} >> ${RESULTS}/output_path.txt

cd ${SCRATCH}

. /etc/profile.d/modules.sh
module load python/3.4
module load gcc/4.9.3
module load mpich
module load spparks/2013.11.19
module load ffmpeg

# disallow uninitialized variables
# note: triggers error when loading /etc/profile.d/modules.sh
set -o nounset

function seed_spparks ()
{
    SPK_SEED_MIN=1
    # SPK_SEED_MAX=$(bc <<< "2^31 - 1")
    SPK_SEED_MAX=2147483647
    NEW_SEED=$(shuf -n 1 -i ${SPK_SEED_MIN}-${SPK_SEED_MAX})
    echo "seed ${NEW_SEED}" > ${1}
}


# copy initial microstructure to working directory
cp ${RESULTS}/initial.dream3d ./

GROW_FILE=agg_model.spkin
seed_spparks ${GROW_FILE}
cat ${SLURM_SUBMIT_DIR}/agg_control_template.spkin >> ${GROW_FILE}
spparks -in ${GROW_FILE}
mv log.spparks grow_spparks.log


# mcpm-animate -i agg_dump*.dream3d --initial initial.dream3d --color binary --ffmpeg
meso animate agg_dump*.dream3d -o grains.mov --initial initial.dream3d --colors binary
meso networks agg_dump*.dream3d -o networks.h5

for f in ${GROW_FILE} grow_spparks.log stats.h5 networks.h5 grains.mov
do
    cp ${f} ${RESULTS}
done


cd ${SLURM_SUBMIT_DIR}
rm -r ${SCRATCH}

echo "start: ${START}"
echo "end: $(date)"

touch ${LOCKFILE}
